-- Crear una base de datos
CREATE DATABASE VEHICULOS;

-- Usar la base de datos
USE VEHICULOS;

CREATE TABLE TIPO_USUARIO (
    id_tip_usuario INT AUTO_INCREMENT PRIMARY KEY,
    tipo VARCHAR(50) UNIQUE NOT NULL -- Ejemplo: "cliente", "administrador"
);

CREATE TABLE TIPO_VEHICULO (
    id_tip_vehiculo INT AUTO_INCREMENT PRIMARY KEY,
    tipo VARCHAR(50) UNIQUE NOT NULL
);

CREATE TABLE ESTADO_VEHICULO (
    id_est_vehiculo INT AUTO_INCREMENT PRIMARY KEY,
    estado VARCHAR(50) UNIQUE NOT NULL
);

CREATE TABLE ESTADO_RESERVA (
    id_est_reserva INT AUTO_INCREMENT PRIMARY KEY,
    estado VARCHAR(50) UNIQUE NOT NULL
);

CREATE TABLE USUARIO (
    id_usuario INT AUTO_INCREMENT PRIMARY KEY,
    nombre VARCHAR(100) NOT NULL,
    apellido VARCHAR(100) NOT NULL,
    correo VARCHAR(150) UNIQUE NOT NULL,
    telefono VARCHAR(20),
    direccion VARCHAR(200),
    usuario VARCHAR(50) UNIQUE NOT NULL,
    contraseña VARCHAR(100) NOT NULL,
    id_tip_usuario INT NOT NULL,
    fecha_registro TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id_tip_usuario) REFERENCES TIPO_USUARIO(id_tip_usuario)
);


CREATE TABLE VEHICULO (
    id_vehiculo INT AUTO_INCREMENT PRIMARY KEY,
    marca VARCHAR(50) NOT NULL,
    modelo VARCHAR(50) NOT NULL,
    año YEAR NOT NULL,
    id_tip_vehiculo INT NOT NULL,
    precio_diario DECIMAL(10, 2) NOT NULL,
    id_est_vehiculo INT NOT NULL,
    descripcion TEXT,
    FOREIGN KEY (id_tip_vehiculo) REFERENCES TIPO_VEHICULO(id_tip_vehiculo),
    FOREIGN KEY (id_est_vehiculo) REFERENCES ESTADO_VEHICULO(id_est_vehiculo)
);


CREATE TABLE RESERVA (
    id_reserva INT AUTO_INCREMENT PRIMARY KEY,
    id_usuario INT NOT NULL,
    id_vehiculo INT NOT NULL,
    fecha_reserva TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    fecha_inicio DATE NOT NULL,
    fecha_fin DATE NOT NULL,
    punto_recogida VARCHAR(100) NOT NULL,
    punto_entrega VARCHAR(100) NOT NULL,
    id_est_reserva INT NOT NULL,
    FOREIGN KEY (id_usuario) REFERENCES USUARIO(id_usuario),
    FOREIGN KEY (id_vehiculo) REFERENCES VEHICULO(id_vehiculo),
    FOREIGN KEY (id_est_reserva) REFERENCES ESTADO_RESERVA(id_est_reserva)
);



CREATE TABLE CLASIFICACION (
    id_clasificacion INT AUTO_INCREMENT PRIMARY KEY,
    id_reserva INT NOT NULL,
    puntuacion INT CHECK (puntuacion BETWEEN 1 AND 5),
    comentario TEXT,
    fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id_reserva) REFERENCES RESERVA(id_reserva)
);

CREATE TABLE MENSAJE (
    id_mensaje INT AUTO_INCREMENT PRIMARY KEY,
    id_usuario INT NOT NULL,
    asunto VARCHAR(100),
    mensaje TEXT,
    fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    leido BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (id_usuario) REFERENCES USUARIO(id_usuario)
);


--base de datos oracle
-- Crear secuencias para IDs autoincrementables
CREATE SEQUENCE SEQ_TIPO_USUARIO START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_TIPO_VEHICULO START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_ESTADO_VEHICULO START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_ESTADO_RESERVA START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_USUARIO START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_VEHICULO START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_RESERVA START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_CLASIFICACION START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_MENSAJE START WITH 1 INCREMENT BY 1;

-- Tabla TIPO_USUARIO
CREATE TABLE TIPO_USUARIO (
    id_tip_usuario NUMBER PRIMARY KEY,
    tipo VARCHAR2(50) UNIQUE NOT NULL
);

-- Tabla TIPO_VEHICULO
CREATE TABLE TIPO_VEHICULO (
    id_tip_vehiculo NUMBER PRIMARY KEY,
    tipo VARCHAR2(50) UNIQUE NOT NULL
);

-- Tabla ESTADO_VEHICULO
CREATE TABLE ESTADO_VEHICULO (
    id_est_vehiculo NUMBER PRIMARY KEY,
    estado VARCHAR2(50) UNIQUE NOT NULL
);

-- Tabla ESTADO_RESERVA
CREATE TABLE ESTADO_RESERVA (
    id_est_reserva NUMBER PRIMARY KEY,
    estado VARCHAR2(50) UNIQUE NOT NULL
);

-- Tabla USUARIO
CREATE TABLE USUARIO (
    id_usuario NUMBER PRIMARY KEY,
    nombre VARCHAR2(100) NOT NULL,
    apellido VARCHAR2(100) NOT NULL,
    correo VARCHAR2(150) UNIQUE NOT NULL,
    telefono VARCHAR2(20),
    direccion VARCHAR2(200),
    usuario VARCHAR2(50) UNIQUE NOT NULL,
    contraseña VARCHAR2(100) NOT NULL,
    id_tip_usuario NUMBER NOT NULL,
    fecha_registro TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id_tip_usuario) REFERENCES TIPO_USUARIO(id_tip_usuario)
);

-- Tabla VEHICULO
CREATE TABLE VEHICULO (
    id_vehiculo NUMBER PRIMARY KEY,
    marca VARCHAR2(50) NOT NULL,
    modelo VARCHAR2(50) NOT NULL,
    año NUMBER(4) NOT NULL, -- Año representado como un número de 4 dígitos
    id_tip_vehiculo NUMBER NOT NULL,
    precio_diario NUMBER(10, 2) NOT NULL,
    id_est_vehiculo NUMBER NOT NULL,
    descripcion CLOB,
    FOREIGN KEY (id_tip_vehiculo) REFERENCES TIPO_VEHICULO(id_tip_vehiculo),
    FOREIGN KEY (id_est_vehiculo) REFERENCES ESTADO_VEHICULO(id_est_vehiculo)
);

-- Tabla RESERVA
CREATE TABLE RESERVA (
    id_reserva NUMBER PRIMARY KEY,
    id_usuario NUMBER NOT NULL,
    id_vehiculo NUMBER NOT NULL,
    fecha_reserva TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    fecha_inicio DATE NOT NULL,
    fecha_fin DATE NOT NULL,
    punto_recogida VARCHAR2(100) NOT NULL,
    punto_entrega VARCHAR2(100) NOT NULL,
    id_est_reserva NUMBER NOT NULL,
    FOREIGN KEY (id_usuario) REFERENCES USUARIO(id_usuario),
    FOREIGN KEY (id_vehiculo) REFERENCES VEHICULO(id_vehiculo),
    FOREIGN KEY (id_est_reserva) REFERENCES ESTADO_RESERVA(id_est_reserva)
);

-- Tabla CLASIFICACION
CREATE TABLE CLASIFICACION (
    id_clasificacion NUMBER PRIMARY KEY,
    id_reserva NUMBER NOT NULL,
    puntuacion NUMBER CHECK (puntuacion BETWEEN 1 AND 5),
    comentario CLOB,
    fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id_reserva) REFERENCES RESERVA(id_reserva)
);

-- Tabla MENSAJE
CREATE TABLE MENSAJE (
    id_mensaje NUMBER PRIMARY KEY,
    id_usuario NUMBER NOT NULL,
    asunto VARCHAR2(100),
    mensaje CLOB,
    fecha TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    leido NUMBER(1) DEFAULT 0, -- BOOLEAN reemplazado por 0 (falso) y 1 (verdadero)
    FOREIGN KEY (id_usuario) REFERENCES USUARIO(id_usuario)
);

-- Crear triggers para los autoincrementos
CREATE OR REPLACE TRIGGER TRG_TIPO_USUARIO_PK
BEFORE INSERT ON TIPO_USUARIO
FOR EACH ROW
BEGIN
    :NEW.id_tip_usuario := SEQ_TIPO_USUARIO.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER TRG_TIPO_VEHICULO_PK
BEFORE INSERT ON TIPO_VEHICULO
FOR EACH ROW
BEGIN
    :NEW.id_tip_vehiculo := SEQ_TIPO_VEHICULO.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER TRG_ESTADO_VEHICULO_PK
BEFORE INSERT ON ESTADO_VEHICULO
FOR EACH ROW
BEGIN
    :NEW.id_est_vehiculo := SEQ_ESTADO_VEHICULO.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER TRG_ESTADO_RESERVA_PK
BEFORE INSERT ON ESTADO_RESERVA
FOR EACH ROW
BEGIN
    :NEW.id_est_reserva := SEQ_ESTADO_RESERVA.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER TRG_USUARIO_PK
BEFORE INSERT ON USUARIO
FOR EACH ROW
BEGIN
    :NEW.id_usuario := SEQ_USUARIO.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER TRG_VEHICULO_PK
BEFORE INSERT ON VEHICULO
FOR EACH ROW
BEGIN
    :NEW.id_vehiculo := SEQ_VEHICULO.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER TRG_RESERVA_PK
BEFORE INSERT ON RESERVA
FOR EACH ROW
BEGIN
    :NEW.id_reserva := SEQ_RESERVA.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER TRG_CLASIFICACION_PK
BEFORE INSERT ON CLASIFICACION
FOR EACH ROW
BEGIN
    :NEW.id_clasificacion := SEQ_CLASIFICACION.NEXTVAL;
END;
/

CREATE OR REPLACE TRIGGER TRG_MENSAJE_PK
BEFORE INSERT ON MENSAJE
FOR EACH ROW
BEGIN
    :NEW.id_mensaje := SEQ_MENSAJE.NEXTVAL;
END;
/

